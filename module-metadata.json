{
  "path": ".",
  "variables": {
    "address_prefixes": {
      "name": "address_prefixes",
      "type": "object({\n    zone-1 = optional(list(string))\n    zone-2 = optional(list(string))\n    zone-3 = optional(list(string))\n  })",
      "description": "OPTIONAL - IP range that will be defined for the VPC for a certain location. Use only with manual address prefixes",
      "default": {
        "zone-1": null,
        "zone-2": null,
        "zone-3": null
      },
      "pos": {
        "filename": "variables.tf",
        "line": 73
      }
    },
    "classic_access": {
      "name": "classic_access",
      "type": "bool",
      "description": "OPTIONAL - Classic Access to the VPC",
      "default": false,
      "pos": {
        "filename": "variables.tf",
        "line": 43
      }
    },
    "default_network_acl_name": {
      "name": "default_network_acl_name",
      "type": "string",
      "description": "OPTIONAL - Name of the Default ACL. If null, a name will be automatically generated",
      "pos": {
        "filename": "variables.tf",
        "line": 55
      }
    },
    "default_routing_table_name": {
      "name": "default_routing_table_name",
      "type": "string",
      "description": "OPTIONAL - Name of the Default Routing Table. If null, a name will be automatically generated",
      "pos": {
        "filename": "variables.tf",
        "line": 67
      }
    },
    "default_security_group_name": {
      "name": "default_security_group_name",
      "type": "string",
      "description": "OPTIONAL - Name of the Default Security Group. If null, a name will be automatically generated",
      "pos": {
        "filename": "variables.tf",
        "line": 61
      }
    },
    "name": {
      "name": "name",
      "type": "string",
      "description": "Name for VPC",
      "required": true,
      "pos": {
        "filename": "variables.tf",
        "line": 5
      }
    },
    "network_acls": {
      "name": "network_acls",
      "type": "list(\n    object({\n      name                = string\n      network_connections = optional(list(string))\n      add_cluster_rules   = optional(bool)\n      rules = list(\n        object({\n          name        = string\n          action      = string\n          destination = string\n          direction   = string\n          source      = string\n          tcp = optional(\n            object({\n              port_max        = optional(number)\n              port_min        = optional(number)\n              source_port_max = optional(number)\n              source_port_min = optional(number)\n            })\n          )\n          udp = optional(\n            object({\n              port_max        = optional(number)\n              port_min        = optional(number)\n              source_port_max = optional(number)\n              source_port_min = optional(number)\n            })\n          )\n          icmp = optional(\n            object({\n              type = optional(number)\n              code = optional(number)\n            })\n          )\n        })\n      )\n    })\n  )",
      "description": "List of ACLs to create. Rules can be automatically created to allow inbound and outbound traffic from a VPC tier by adding the name of that tier to the `network_connections` list. Rules automatically generated by these network connections will be added at the beginning of a list, and will be web-tierlied to traffic first. At least one rule must be provided for each ACL.",
      "default": [
        {
          "add_cluster_rules": true,
          "name": "vpc-acl",
          "rules": [
            {
              "action": "allow",
              "destination": "0.0.0.0/0",
              "direction": "inbound",
              "name": "allow-all-inbound",
              "source": "0.0.0.0/0"
            },
            {
              "action": "allow",
              "destination": "0.0.0.0/0",
              "direction": "outbound",
              "name": "allow-all-outbound",
              "source": "0.0.0.0/0"
            }
          ]
        }
      ],
      "pos": {
        "filename": "variables.tf",
        "line": 98
      }
    },
    "network_cidr": {
      "name": "network_cidr",
      "type": "string",
      "description": "Network CIDR for the VPC. This is used to manage network ACL rules for cluster provisioning.",
      "default": "10.0.0.0/8",
      "pos": {
        "filename": "variables.tf",
        "line": 37
      }
    },
    "prefix": {
      "name": "prefix",
      "type": "string",
      "description": "The prefix that you would like to append to your resources",
      "required": true,
      "pos": {
        "filename": "variables.tf",
        "line": 20
      }
    },
    "region": {
      "name": "region",
      "type": "string",
      "description": "The region to which to deploy the VPC",
      "required": true,
      "pos": {
        "filename": "variables.tf",
        "line": 15
      }
    },
    "resource_group_id": {
      "name": "resource_group_id",
      "type": "string",
      "description": "The resource group ID where the VPC to be created",
      "required": true,
      "pos": {
        "filename": "variables.tf",
        "line": 10
      }
    },
    "routes": {
      "name": "routes",
      "type": "list(\n    object({\n      name        = string\n      zone        = number\n      destination = string\n      next_hop    = string\n    })\n  )",
      "description": "OPTIONAL - Allows you to specify the next hop for packets based on their destination address",
      "default": [],
      "pos": {
        "filename": "variables.tf",
        "line": 398
      }
    },
    "security_group_rules": {
      "name": "security_group_rules",
      "type": "list(\n    object({\n      name      = string\n      direction = string\n      remote    = string\n      tcp = optional(\n        object({\n          port_max = optional(number)\n          port_min = optional(number)\n        })\n      )\n      udp = optional(\n        object({\n          port_max = optional(number)\n          port_min = optional(number)\n        })\n      )\n      icmp = optional(\n        object({\n          type = optional(number)\n          code = optional(number)\n        })\n      )\n    })\n  )",
      "description": "A list of security group rules to be added to the default vpc security group",
      "default": [
        {
          "direction": "inbound",
          "name": "default-sgr",
          "remote": "10.0.0.0/8"
        }
      ],
      "pos": {
        "filename": "variables.tf",
        "line": 314
      }
    },
    "subnets": {
      "name": "subnets",
      "type": "object({\n    zone-1 = list(object({\n      name           = string\n      cidr           = string\n      public_gateway = optional(bool)\n      acl_name       = string\n    }))\n    zone-2 = list(object({\n      name           = string\n      cidr           = string\n      public_gateway = optional(bool)\n      acl_name       = string\n    }))\n    zone-3 = list(object({\n      name           = string\n      cidr           = string\n      public_gateway = optional(bool)\n      acl_name       = string\n    }))\n  })",
      "description": "List of subnets for the vpc. For each item in each array, a subnet will be created. Items can be either CIDR blocks or total ipv4 addressess. Public gateways will be enabled only in zones where a gateway has been created",
      "default": {
        "zone-1": [
          {
            "acl_name": "vpc-acl",
            "cidr": "10.10.10.0/24",
            "name": "subnet-a",
            "public_gateway": true
          }
        ],
        "zone-2": [
          {
            "acl_name": "vpc-acl",
            "cidr": "10.20.10.0/24",
            "name": "subnet-b",
            "public_gateway": true
          }
        ],
        "zone-3": [
          {
            "acl_name": "vpc-acl",
            "cidr": "10.30.10.0/24",
            "name": "subnet-c",
            "public_gateway": false
          }
        ]
      },
      "pos": {
        "filename": "variables.tf",
        "line": 251
      }
    },
    "tags": {
      "name": "tags",
      "type": "list(string)",
      "description": "List of Tags for the resource created",
      "pos": {
        "filename": "variables.tf",
        "line": 25
      }
    },
    "use_manual_address_prefixes": {
      "name": "use_manual_address_prefixes",
      "type": "bool",
      "description": "OPTIONAL - Use manual address prefixes for VPC",
      "default": false,
      "pos": {
        "filename": "variables.tf",
        "line": 49
      }
    },
    "use_public_gateways": {
      "name": "use_public_gateways",
      "type": "object({\n    zone-1 = optional(bool)\n    zone-2 = optional(bool)\n    zone-3 = optional(bool)\n  })",
      "description": "Create a public gateway in any of the three zones with `true`.",
      "default": {
        "zone-1": true,
        "zone-2": false,
        "zone-3": false
      },
      "pos": {
        "filename": "variables.tf",
        "line": 225
      }
    }
  },
  "outputs": {
    "network_acls": {
      "name": "network_acls",
      "description": "List of shortnames and IDs of network ACLs",
      "pos": {
        "filename": "outputs.tf",
        "line": 87
      }
    },
    "public_gateways": {
      "name": "public_gateways",
      "description": "Map of public gateways by zone",
      "pos": {
        "filename": "outputs.tf",
        "line": 26
      }
    },
    "subnet_detail_list": {
      "name": "subnet_detail_list",
      "description": "A list of subnets containing names, CIDR blocks, and zones.",
      "pos": {
        "filename": "outputs.tf",
        "line": 52
      }
    },
    "subnet_ids": {
      "name": "subnet_ids",
      "description": "The IDs of the subnets",
      "pos": {
        "filename": "outputs.tf",
        "line": 44
      }
    },
    "subnet_zone_list": {
      "name": "subnet_zone_list",
      "description": "A list containing subnet IDs and subnet zones",
      "pos": {
        "filename": "outputs.tf",
        "line": 69
      }
    },
    "vpc_crn": {
      "name": "vpc_crn",
      "description": "CRN of VPC created",
      "pos": {
        "filename": "outputs.tf",
        "line": 15
      }
    },
    "vpc_id": {
      "name": "vpc_id",
      "description": "ID of VPC created",
      "pos": {
        "filename": "outputs.tf",
        "line": 10
      }
    },
    "vpc_name": {
      "name": "vpc_name",
      "description": "Name of VPC created",
      "pos": {
        "filename": "outputs.tf",
        "line": 5
      }
    }
  },
  "required_core": [
    "\u003e= 1.0.0"
  ],
  "required_providers": {
    "ibm": {
      "source": "IBM-Cloud/ibm",
      "version_constraints": [
        "\u003e= 1.45.0"
      ]
    }
  },
  "managed_resources": {
    "ibm_is_network_acl.network_acl": {
      "mode": "managed",
      "type": "ibm_is_network_acl",
      "name": "network_acl",
      "attributes": {
        "name": "prefix",
        "resource_group": "resource_group_id"
      },
      "provider": {
        "name": "ibm"
      },
      "pos": {
        "filename": "network_acls.tf",
        "line": 121
      }
    },
    "ibm_is_public_gateway.gateway": {
      "mode": "managed",
      "type": "ibm_is_public_gateway",
      "name": "gateway",
      "attributes": {
        "name": "prefix",
        "resource_group": "resource_group_id",
        "tags": "tags"
      },
      "provider": {
        "name": "ibm"
      },
      "pos": {
        "filename": "main.tf",
        "line": 78
      }
    },
    "ibm_is_security_group_rule.default_vpc_rule": {
      "mode": "managed",
      "type": "ibm_is_security_group_rule",
      "name": "default_vpc_rule",
      "provider": {
        "name": "ibm"
      },
      "pos": {
        "filename": "default_security_group.tf",
        "line": 13
      }
    },
    "ibm_is_subnet.subnet": {
      "mode": "managed",
      "type": "ibm_is_subnet",
      "name": "subnet",
      "attributes": {
        "resource_group": "resource_group_id",
        "tags": "tags"
      },
      "provider": {
        "name": "ibm"
      },
      "pos": {
        "filename": "subnet.tf",
        "line": 32
      }
    },
    "ibm_is_vpc.vpc": {
      "mode": "managed",
      "type": "ibm_is_vpc",
      "name": "vpc",
      "attributes": {
        "address_prefix_management": "use_manual_address_prefixes",
        "classic_access": "classic_access",
        "default_network_acl_name": "default_network_acl_name",
        "default_routing_table_name": "default_routing_table_name",
        "default_security_group_name": "default_security_group_name",
        "name": "prefix",
        "resource_group": "resource_group_id",
        "tags": "tags"
      },
      "provider": {
        "name": "ibm"
      },
      "pos": {
        "filename": "main.tf",
        "line": 5
      }
    },
    "ibm_is_vpc_address_prefix.address_prefixes": {
      "mode": "managed",
      "type": "ibm_is_vpc_address_prefix",
      "name": "address_prefixes",
      "provider": {
        "name": "ibm"
      },
      "pos": {
        "filename": "main.tf",
        "line": 31
      }
    },
    "ibm_is_vpc_address_prefix.subnet_prefix": {
      "mode": "managed",
      "type": "ibm_is_vpc_address_prefix",
      "name": "subnet_prefix",
      "provider": {
        "name": "ibm"
      },
      "pos": {
        "filename": "subnet.tf",
        "line": 16
      }
    },
    "ibm_is_vpc_route.route": {
      "mode": "managed",
      "type": "ibm_is_vpc_route",
      "name": "route",
      "attributes": {
        "name": "prefix"
      },
      "provider": {
        "name": "ibm"
      },
      "pos": {
        "filename": "main.tf",
        "line": 54
      }
    }
  },
  "data_resources": {},
  "module_calls": {
    "dynamic_values": {
      "name": "dynamic_values",
      "source": "./dynamic_values",
      "attributes": {
        "address_prefixes": "address_prefixes",
        "network_acls": "network_acls",
        "network_cidr": "network_cidr",
        "prefix": "prefix",
        "region": "region",
        "routes": "routes",
        "security_group_rules": "security_group_rules",
        "subnets": "subnets",
        "use_public_gateways": "use_public_gateways"
      },
      "pos": {
        "filename": "dynamic_values.tf",
        "line": 5
      }
    },
    "unit_tests": {
      "name": "unit_tests",
      "source": "./dynamic_values",
      "pos": {
        "filename": "dynamic_values.tf",
        "line": 26
      }
    }
  }
}
